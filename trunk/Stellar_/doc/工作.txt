lod
camera
fps

adtread的时候new新的内存，这块需要改掉。目前主线程还是很卡。terrainchunkentity放到WorldManager中实现。




M2
换装
max插件


需要处理的东西：

地形
  模型变换（位置、旋转、缩放）
  所有资源的BOUNDBOX（变换后BOX也要跟着变换）
  地图上有些小点空隙

  静态阴影(lightmap)
  加载多块地形（根据摄像机移动来加载需要的地块，释放不需要的地块）
  地形四叉树管理
    quadtree

  灯光
  地形高光

  Lod

wmo 
  protal bsp

m2 
  动画 粒子系统 mipmap

其它
  water
  sky
  fog
  load system  
    cpu->memory  memory->gpu
  index buffer 使用TRIANGLE STRIP，最后一个三角形使用退化（degenerate triangle）处理。



计划: bsp portal loadsystem animation partical water sky fog 优化  WorldEditor ModelEditor ParticalEditor
时间: 2008-2-22                                          2008-3-30                                      2008-5-30
////////////////////////////////////////////////////////////////////////////////////////////////////

floating-point precision errors 浮点精度问题
http://www.cs.unc.edu/~geom/theses/gottschalk/main.pdf     aabb


0.使用天空球包围整个世界,使用雾限制可控远景.
1.地形裁减: 
  1.使用四叉树算法对MapArea->AreaChunk逐层进行相对镜头的可见性裁减.
  2.在1过程中,对镜头内的地形进行水平线扫描剔除.
  2.然后镜头裁减完的区域必然是连续区域,对此连续区域作ROAM算法下的LOD处理,近细远粗.
2.模型裁减: 
  1.基于上述地形四叉树裁减下作基本的每一个模型的裁减,实践测试结果表明收益大于测试成本.
  2.距离裁减:以镜头为中心画圆,处于远景雾外的模型不作渲染,模型进雾后会逐步显示,这样不会有poping缺陷.
  3.不采用模型LOD,数据制作过于复杂,控制复杂,加大内存需求,也有poping缺陷,优点不明显.
  4.在地形水平线裁减中剔除物体.
3.进入BSP室内场景后的裁减.
